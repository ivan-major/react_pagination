{"version":3,"sources":["components/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","onPageChange","toNextPage","toPrevPage","selectPerPage","pages","itemsFrom","itemsTo","i","Math","ceil","push","className","name","value","onChange","event","target","type","disabled","onClick","map","pageNumber","length","to","classNames","button__active","App","state","setState","this","path","element","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uRAeaA,EAA8B,SAAC,GAa1C,IALK,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAC,EAKI,EALJA,KACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAEMC,EAAQ,GACRC,GAAaN,EAAO,GAAKD,EAAU,EACnCQ,EAAUP,EAAOD,EAEdS,EAAI,EAAGA,GAAKC,KAAKC,KAAKZ,EAAQC,GAAUS,GAAK,EACpDH,EAAMM,KAAKH,GAGb,OACE,qCACE,sBAAKI,UAAU,SAAf,UACE,qBAAKA,UAAU,oBAAf,4BACA,yBACEC,KAAK,OACLC,MAAOf,EACPgB,SAAU,SAACC,GACTZ,GAAeY,EAAMC,OAAOH,QAJhC,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,sBAGJ,sBAAKF,UAAU,iBAAf,kBAEG,IACAN,EACA,IAJH,IAMG,IACAC,EAAUT,EAAQA,EAAQS,EAC1B,IARH,KAUG,IACAT,KAGH,qBAAIc,UAAU,aAAd,UACE,oBAAIA,UAAU,OAAd,SACE,wBACEM,KAAK,SACLN,UAAU,cACVO,SAAmB,IAATnB,EACVoB,QAAS,WACPjB,KALJ,uBAYDE,EAAMgB,KAAI,SAACC,GAAD,OACT,qBAEEV,UACEU,IAAetB,GACG,IAAfsB,GACAA,IAAetB,EAAO,GACtBsB,IAAetB,EAAO,GACtBsB,IAAejB,EAAMkB,OACpB,2BACA,mBATR,UAYGD,IAAetB,EAAO,GAAoB,IAAfsB,GAAgC,KAAZvB,GAC9C,sBAAMa,UAAU,OAAhB,iBAEF,cAAC,IAAD,CAAMY,GAAE,gBAAWF,EAAX,mBAAgCvB,GAAxC,SACE,wBACEmB,KAAK,SACLN,UAAWa,IAAW,SAAU,CAC9BC,eAAgBJ,IAAetB,IAEjCoB,QAAS,WACPnB,EAAaqB,IANjB,SASGA,MAIJA,IAAetB,EAAO,GAAoB,IAAfsB,GAAgC,KAAZvB,GAC9C,sBAAMa,UAAU,OAAhB,mBA7BGU,MAkCT,oBAAIV,UAAU,OAAd,SACE,wBACEM,KAAK,SACLN,UAAU,cACVO,SAAUnB,IAASK,EAAMkB,OACzBH,QAAS,WACPlB,KALJ,2BCvGJyB,G,kNACJC,MAAQ,CACN9B,MAAO,GACPC,QAAS,EACTC,KAAM,G,EAGRC,aAAe,SAACD,GACd,EAAK6B,SAAS,CAAE7B,U,EAGlBE,WAAa,WACX,EAAK2B,UAAS,SAAAD,GAAK,MAAK,CACtB5B,KAAM4B,EAAM5B,KAAO,O,EAIvBG,WAAa,WACX,EAAK0B,UAAS,SAAAD,GAAK,MAAK,CACtB5B,KAAM4B,EAAM5B,KAAO,O,EAIvBI,cAAgB,SAACU,GACf,EAAKe,SAAS,CACZ9B,QAASe,K,4CAIb,WACE,MAAiCgB,KAAKF,MAA9B9B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,KAExB,OACE,qCACE,4CACA,cAAC,IAAD,UACE,cAAC,IAAD,CACE+B,KAAK,IACLC,QACE,cAAC,EAAD,CACElC,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,aAAc6B,KAAK7B,aACnBC,WAAY4B,KAAK5B,WACjBC,WAAY2B,KAAK3B,WACjBC,cAAe0B,KAAK1B,2B,GA9ClB6B,IAAMC,YAiETP,ICxEfQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6111cdc.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './Pagination.css';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  page: number;\n  onPageChange: (pageNumber: number) => void;\n  toNextPage: () => void;\n  toPrevPage: () => void;\n  selectPerPage: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  page,\n  onPageChange,\n  toNextPage,\n  toPrevPage,\n  selectPerPage,\n}) => {\n  const pages = [];\n  const itemsFrom = (page - 1) * perPage + 1;\n  const itemsTo = page * perPage;\n\n  for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <>\n      <div className=\"select\">\n        <div className=\"select__text text\">Items per page</div>\n        <select\n          name=\"item\"\n          value={perPage}\n          onChange={(event) => {\n            selectPerPage(+event.target.value);\n          }}\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n      </div>\n      <div className=\"with-info text\">\n        Items\n        {' '}\n        {itemsFrom}\n        {' '}\n        -\n        {' '}\n        {itemsTo > total ? total : itemsTo}\n        {' '}\n        of\n        {' '}\n        {total}\n      </div>\n\n      <ul className=\"pagination\">\n        <li className=\"prev\">\n          <button\n            type=\"button\"\n            className=\"button prev\"\n            disabled={page === 1}\n            onClick={() => {\n              toPrevPage();\n            }}\n          >\n            Previos\n          </button>\n        </li>\n\n        {pages.map((pageNumber) => (\n          <li\n            key={pageNumber}\n            className={\n              pageNumber === page\n              || pageNumber === 1\n              || pageNumber === page - 1\n              || pageNumber === page + 1\n              || pageNumber === pages.length\n                ? 'pagination__item--active'\n                : 'pagination__item'\n            }\n          >\n            {pageNumber === page - 1 && pageNumber !== 1 && perPage !== 20 && (\n              <span className=\"text\">...</span>\n            )}\n            <Link to={`?page=${pageNumber}perPage=${perPage}`}>\n              <button\n                type=\"button\"\n                className={classNames('button', {\n                  button__active: pageNumber === page,\n                })}\n                onClick={() => {\n                  onPageChange(pageNumber);\n                }}\n              >\n                {pageNumber}\n              </button>\n            </Link>\n\n            {pageNumber === page + 1 && pageNumber !== 9 && perPage !== 20 && (\n              <span className=\"text\">...</span>\n            )}\n          </li>\n        ))}\n\n        <li className=\"next\">\n          <button\n            type=\"button\"\n            className=\"button next\"\n            disabled={page === pages.length}\n            onClick={() => {\n              toNextPage();\n            }}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\n\ntype State = {\n  total: number,\n  perPage: number,\n  page: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  };\n\n  onPageChange = (page: number) => {\n    this.setState({ page });\n  };\n\n  toNextPage = () => {\n    this.setState(state => ({\n      page: state.page + 1,\n    }));\n  };\n\n  toPrevPage = () => {\n    this.setState(state => ({\n      page: state.page - 1,\n    }));\n  };\n\n  selectPerPage = (value: number) => {\n    this.setState({\n      perPage: value,\n    });\n  };\n\n  render() {\n    const { total, perPage, page } = this.state;\n\n    return (\n      <>\n        <h1>Pagination</h1>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={(\n              <Pagination\n                total={total}\n                perPage={perPage}\n                page={page}\n                onPageChange={this.onPageChange}\n                toNextPage={this.toNextPage}\n                toPrevPage={this.toPrevPage}\n                selectPerPage={this.selectPerPage}\n              />\n            )}\n          />\n        </Routes>\n        {/* <Pagination\n          total={total}\n          perPage={perPage}\n          page={page}\n          onPageChange={this.onPageChange}\n          toNextPage={this.toNextPage}\n          toPrevPage={this.toPrevPage}\n          selectPerPage={this.selectPerPage}\n        /> */}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}